What happens when you initialize a repository? Why do you need to do it?

    When a repository is initialized, a ".git" folder is created in the current folder.
    ".git" folder contains metadata for the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area offers an intermediate step between working directory and repository. It allows to easily separate in more than one commit all the new file added to the working directory, which could be logically separated (e.g. some file for a functionality, other files for another functionality, ecc.)

How can you use the staging area to make sure you have one commit per logical change?
	
	When multiple changes are made in the working directory, by adding to the staging area only the files that belong to a single logical change allows to achieve such goal.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	
	When there is a new feature to test, that still is not ready to be committed to the master, it can be developed in a branch. This can be especially useful when the experimental feature is developed by a team: it allows the members of the team to commit and share the changes they make, without adding them to the master.

How do the diagrams help you visualize the branch structure?

	They offer a visual, tree-like representation that allows to quickly understand all the branches and merges.